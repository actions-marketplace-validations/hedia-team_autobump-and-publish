name: "Autobump version and publish"
description: "Hedia's npm packages autobumper & publisher"

inputs:
  npm-token:
    description: "Required to publish package to npm"
    required: true

  issue-number:
    description: "Required by peter-evans/create-or-update-comment & izhangzhihao/delete-comment in order to write/remove comments on the current PR"
    required: true

  label:
    description: "Type of version bump [major, minor, patch]"

  github-token:
    description: "Required by izhangzhihao/delete-comment to remove comment from PR"
    default: ${{ secrets.GITHUB_TOKEN }}
    required: false

  git-email:
    description: "Value for git config user.email"
    required: false
    default: "github-action@users.noreply.github.com"

  git-name:
    description: "Value for git config user.name"
    required: false
    default: "github-actions[bot]"

  is-post-merge:
    description: "Boolean used to publish package as release on NPM when post-merging the PR"
    required: false
    default: false

  run-script: # [string - npm run ...]
    description: "Scripts to be executed prior to publishing package"
    required: false

runs:
  using: "composite"

  steps:
    - name: Set git identity
      run: |
        git config --global user.email ${{ inputs.git-email }}
        git config --global user.name ${{ inputs.git-name }}
      shell: bash

    - name: Register NPM access token
      run: |
        echo "Registering NPM access token"
        npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
      env:
        NPM_TOKEN: ${{ inputs.npm-token }}
      shell: bash

    - name: Fetch latest version from NPM
      id: bump-package-version
      run: |
        if [[ "${{inputs.is-post-merge}}" == 'false' ]]; then
          echo "Fetching latest package version"
          chmod +x ${{ github.action_path }}/bump-package-version.sh
          ${{ github.action_path }}/bump-package-version.sh "${LABEL}"
        else
          echo "Skipped bumping version"
        fi
        exit 0
      env:
        LABEL: ${{ inputs.label }}
      shell: bash

    - name: Run scripts
      id: run-scripts
      run: |
        if [[ "${{inputs.run-script}}" ]]; then
          echo "Running scripts"
          ${{inputs.run-script}}
        else
          echo "Skipped run-script"
        fi
        exit 0
      shell: bash

    - name: Publish package on NPM
      id: publish-package-npm
      run: |
        if [[ "${{inputs.is-post-merge}}" == 'true' ]]; then
          echo "publishing release on npm"
          publish=$(npm publish)
          version=${publish##*+}
        else
          echo "publishing alpha on npm"
          publish=$(npm publish --tag alpha)
          version=${publish##*+}
        fi
        echo ::set-output name=publish-output::"$version"
      shell: bash

    - name: Remove alpha tag
      id: remove-alpha-tag
      run: |
        if [[ "${{inputs.is-post-merge}}" == 'false' ]]; then
          echo "Removing the alpha-tag"
          chmod +x ${{ github.action_path }}/remove-alpha-tag.sh
          ${{ github.action_path }}/remove-alpha-tag.sh
        else
          echo "Skipped remove-alpha-tag"
        fi
        exit 0
      shell: bash

    - name: Remove old comment from PR
      id: delete-comment
      uses: izhangzhihao/delete-comment@master
      with:
        github_token: ${{ inputs.github-token }}
        delete_user_name: ${{ inputs.git-name }}
        issue_number: ${{ inputs.issue-number }} # remove comments from the current PR

    - name: Write comment on PR
      id: write-comment
      uses: peter-evans/create-or-update-comment@v1
      with:
        token: ${{ inputs.github-token }}
        issue-number: ${{ inputs.issue-number }}
        body: |
          ðŸŽ‰  Successfully published new version  ðŸŽ‰
          âœ…  ${{ steps.publish-package-npm.outputs.publish-output }}

branding:
  icon: "arrow-up-circle"
  color: "purple"
